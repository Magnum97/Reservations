import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'application'
    id 'kr.entree.spigradle' version '1.2.4'
    id "io.freefair.lombok" version "4.1.6"
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id "nebula.lint" version "16.8.0"
}
gradleLint.rules = ['all-dependency'] // add as many rules here as you'd like

group = 'me.magnum.reservations'
version = '1.2.3'
description = 'Make vet appointments'
sourceCompatibility = '1.8'
archivesBaseName = 'Reservations' // Put your artifactId here

mainClassName = 'me.magnum.reservations.Reservations'

// See https://github.com/EntryPointKR/Spigradle#repositories for repository shortcodes
repositories {
    paper()
    spigot()
    essentialsX()
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    mavenCentral()
    jitpack() // For vault
    mavenLocal()
}

dependencies {
    compileOnly paper('1.15.2-R0.1-SNAPSHOT')
    compileOnly spigot('1.15.2-R0.1-SNAPSHOT')
    compileOnly essentialsX('2.17.2')
    compileOnly 'io.apexcreations:HorseRPG:3.1.15'
    compile 'me.magnum.lib:Common:1.0.0'
    implementation 'com.github.magnum97:LightningStorage:-SNAPSHOT'
    shadow 'fr.minuskube.inv:smart-invs:1.2.6'
    implementation 'co.aikar:acf-paper:0.5.0-SNAPSHOT'
    implementation 'com.google.code.gson:gson:2.8.6'
}
spigot {
    authors = ['Magnum1997']
    depends = ['Essentials']
//    depends = ['Essentials', 'HorseRPG']
//    softDepends = ['HorseRPG']
    apiVersion = '1.15'
    load = STARTUP
    commands {
        give {
            aliases = ['vai']
            description = 'Main command'
            usage = '/<command>'
        }
    }
    permissions {
        'test.foo' {
            description = 'Allows foo command'
            defaults = 'true'
        }
        'test.*' {
            description = 'Wildcard permission'
            defaults = 'op'
            children = ['test.foo': true]
        }
    }
}

compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

shadowJar {
//    archiveFileName = ${archivesBaseName}.${archiveExtension}
    relocate 'co.aikar.commands', 'me.magnum.reservations.acf'
    relocate 'me.magnum.lib', 'me.magnum.reservations.lib'
    version = null
    classifier = null
    minimize()
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar as ShadowJar
//    prefix = "me.magnum.reservations" /* Default value is "shadow"*/ 
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

tasks.build.dependsOn shadowJar

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
